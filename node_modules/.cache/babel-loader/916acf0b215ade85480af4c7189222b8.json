{"ast":null,"code":"// import React from \"react\";\n// import classNames from \"classnames\";\n// import PropTypes from \"prop-types\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import Input from \"@material-ui/core/Input\";\n// // @material-ui/icons\n// import Clear from \"@material-ui/icons/Clear\";\n// import Check from \"@material-ui/icons/Check\";\n// // core components\n// import styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\n// const useStyles = makeStyles(styles);\n// export default function CustomInput(props) {\n//   const classes = useStyles();\n//   const {\n//     formControlProps,\n//     labelText,\n//     id,\n//     labelProps,\n//     inputProps,\n//     error,\n//     success\n//   } = props;\n//   const labelClasses = classNames({\n//     [\" \" + classes.labelRootError]: error,\n//     [\" \" + classes.labelRootSuccess]: success && !error\n//   });\n//   const underlineClasses = classNames({\n//     [classes.underlineError]: error,\n//     [classes.underlineSuccess]: success && !error,\n//     [classes.underline]: true\n//   });\n//   const marginTop = classNames({\n//     [classes.marginTop]: labelText === undefined\n//   });\n//   return (\n//     <FormControl\n//       {...formControlProps}\n//       className={formControlProps.className + \" \" + classes.formControl}\n//     >\n//       {labelText !== undefined ? (\n//         <InputLabel\n//           className={classes.labelRoot + labelClasses}\n//           htmlFor={id}\n//           {...labelProps}\n//         >\n//           {labelText}\n//         </InputLabel>\n//       ) : null}\n//       <Input\n//         classes={{\n//           root: marginTop,\n//           disabled: classes.disabled,\n//           underline: underlineClasses\n//         }}\n//         id={id}\n//         {...inputProps}\n//       />\n//       {error ? (\n//         <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n//       ) : success ? (\n//         <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n//       ) : null}\n//     </FormControl>\n//   );\n// }\n// CustomInput.propTypes = {\n//   labelText: PropTypes.node,\n//   labelProps: PropTypes.object,\n//   id: PropTypes.string,\n//   inputProps: PropTypes.object,\n//   formControlProps: PropTypes.object,\n//   error: PropTypes.bool,\n//   success: PropTypes.bool\n// };","map":{"version":3,"sources":["C:/Users/shri manju/dash/dashboard/src/components/CustomInput/CustomInput.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\n// import classNames from \"classnames\";\n// import PropTypes from \"prop-types\";\n// // @material-ui/core components\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import Input from \"@material-ui/core/Input\";\n// // @material-ui/icons\n// import Clear from \"@material-ui/icons/Clear\";\n// import Check from \"@material-ui/icons/Check\";\n// // core components\n// import styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\n\n// const useStyles = makeStyles(styles);\n\n// export default function CustomInput(props) {\n//   const classes = useStyles();\n//   const {\n//     formControlProps,\n//     labelText,\n//     id,\n//     labelProps,\n//     inputProps,\n//     error,\n//     success\n//   } = props;\n\n//   const labelClasses = classNames({\n//     [\" \" + classes.labelRootError]: error,\n//     [\" \" + classes.labelRootSuccess]: success && !error\n//   });\n//   const underlineClasses = classNames({\n//     [classes.underlineError]: error,\n//     [classes.underlineSuccess]: success && !error,\n//     [classes.underline]: true\n//   });\n//   const marginTop = classNames({\n//     [classes.marginTop]: labelText === undefined\n//   });\n//   return (\n//     <FormControl\n//       {...formControlProps}\n//       className={formControlProps.className + \" \" + classes.formControl}\n//     >\n//       {labelText !== undefined ? (\n//         <InputLabel\n//           className={classes.labelRoot + labelClasses}\n//           htmlFor={id}\n//           {...labelProps}\n//         >\n//           {labelText}\n//         </InputLabel>\n//       ) : null}\n//       <Input\n//         classes={{\n//           root: marginTop,\n//           disabled: classes.disabled,\n//           underline: underlineClasses\n//         }}\n//         id={id}\n//         {...inputProps}\n//       />\n//       {error ? (\n//         <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n//       ) : success ? (\n//         <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n//       ) : null}\n//     </FormControl>\n//   );\n// }\n\n// CustomInput.propTypes = {\n//   labelText: PropTypes.node,\n//   labelProps: PropTypes.object,\n//   id: PropTypes.string,\n//   inputProps: PropTypes.object,\n//   formControlProps: PropTypes.object,\n//   error: PropTypes.bool,\n//   success: PropTypes.bool\n// };\n"]},"metadata":{},"sourceType":"module"}